@model SupportWeb.Models.ViewModels.Soporte.NuevaRespuestaViewModel
@{
    ViewData["Title"] = "Nueva Respuesta";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@if (Model == null || Model.Reclamo == null)
{
    <div class="container py-5">
        <div class="alert alert-danger text-center">
            <i class="bi bi-exclamation-triangle me-2"></i>
            No se encontró información del reclamo seleccionado.<br />
            Por favor, regresa y selecciona un reclamo válido.
        </div>
        <div class="text-center">
            <a href="@Url.Action("SeleccionarReclamoParaResponder", "Soporte")" class="btn btn-outline-secondary">
                <i class="bi bi-arrow-left me-1"></i>Volver
            </a>
        </div>
    </div>
}
else
{
    <div class="container py-5">
        <div class="row justify-content-center">
            <div class="col-lg-8">
                <div class="card border-0 shadow-sm animate__animated animate__fadeIn">
                    <div class="card-header bg-primary text-white d-flex align-items-center">
                        <i class="bi bi-reply-fill me-2 fs-4"></i>
                        <h4 class="mb-0">Responder al Reclamo</h4>
                    </div>
                    <div class="card-body">
                        <dl class="row mb-3">
                            <dt class="col-sm-3">ID</dt>
                            <dd class="col-sm-9 fw-bold">@Model.Reclamo.Id</dd>
                            <dt class="col-sm-3">Título</dt>
                            <dd class="col-sm-9">@Model.Reclamo.Titulo</dd>
                            <dt class="col-sm-3">Usuario</dt>
                            <dd class="col-sm-9">@Model.Reclamo.UsuarioNombre</dd>
                            <dt class="col-sm-3">Estado</dt>
                            <dd class="col-sm-9">
                                @{
                                    var estadoBadge = Model.Reclamo.Estado switch
                                    {
                                        "Nuevo" => "bg-primary",         // azul
                                        "Respondido" => "bg-info",       // celeste
                                        "EnProceso" => "bg-warning",     // naranja
                                        "Cerrado" => "bg-secondary",     // gris
                                        _ => "bg-secondary"
                                    };
                                }
                                <span class="badge @estadoBadge">@Model.Reclamo.Estado</span>
                            </dd>
                            <dt class="col-sm-3">Prioridad</dt>
                            <dd class="col-sm-9">
                                @{
                                    var prioridadBadge = Model.Reclamo.Prioridad switch
                                    {
                                        "Baja" => "bg-secondary",           // gris
                                        "Media" => "bg-warning",           // naranja
                                        "Alta" => "bg-danger",             // rojo
                                        "Urgente" => "bg-danger",          // rojo
                                        _ => "bg-secondary"
                                    };
                                }
                                <span class="badge @prioridadBadge">@Model.Reclamo.Prioridad</span>
                            </dd>
                            <dt class="col-sm-3">Fecha Creación</dt>
                            <dd class="col-sm-9">@Model.Reclamo.FechaCreacion.ToString("dd/MM/yyyy HH:mm")</dd>
                            <dt class="col-sm-3">Tiempo Transcurrido</dt>
                            <dd class="col-sm-9">
                                @{
                                    var tiempo = DateTime.Now - Model.Reclamo.FechaCreacion;
                                    string tiempoStr = tiempo.TotalDays >= 1 ? $"{(int)tiempo.TotalDays} días" : $"{(int)tiempo.TotalHours} horas";
                                }
                                <span class="text-muted">@tiempoStr</span>
                            </dd>
                        </dl>
                        <form asp-action="NuevaRespuesta" asp-controller="Soporte" method="post">
                            <input type="hidden" name="ReclamoId" value="@Model.Reclamo.Id" />
                            <input type="hidden" name="Mensaje" id="Mensaje" />
                            <div class="mb-3">
                                <label for="Contenido" class="form-label fw-bold">Escribe tu respuesta</label>
                                <textarea class="form-control" id="Contenido" name="Contenido" rows="5" required placeholder="Escribe aquí la respuesta al usuario..." oninput="document.getElementById('Mensaje').value = this.value;"></textarea>
                            </div>
                            <div class="d-flex justify-content-end gap-2">
                                <button type="submit" class="btn btn-success">
                                    <i class="bi bi-send me-1"></i>Enviar Respuesta
                                </button>
                                <a href="@Url.Action("SeleccionarReclamoParaResponder", "Soporte")" class="btn btn-outline-secondary">
                                    <i class="bi bi-arrow-left me-1"></i>Volver
                                </a>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>
}