<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
@{
    ViewData["Title"] = "Notificaciones";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container-fluid py-4">
    <!-- Header -->
    <div class="row mb-4">
        <div class="col-12">
            <div class="d-flex justify-content-between align-items-center">
                <div>
                    <h1 class="h3 mb-0 text-gray-800">
                        <i class="bi bi-bell-fill me-2"></i>Mis Notificaciones
                    </h1>
                    <p class="text-muted mb-0">Mantente al día con todas tus notificaciones</p>
                </div>
                <div>
                    <a asp-controller="Usuario" asp-action="Dashboard" class="btn btn-outline-primary">
                        <i class="bi bi-arrow-left me-1"></i>Volver al Dashboard
                    </a>
                </div>
            </div>
        </div>
    </div>

    <!-- Filtros y acciones -->
    <div class="row mb-4">
        <div class="col-12">
            <div class="card border-0 shadow-sm">
                <div class="card-body py-3">
                    <div class="row align-items-center">
                        <div class="col-md-6">
                            @{
                                var notificaciones = ViewBag.Notificaciones as IEnumerable<dynamic> ?? new List<dynamic>();
                                var total = notificaciones.Count();
                                var noLeidas = total; // Todas se consideran no leídas por defecto
                                var leidas = 0; // No hay persistencia de leídas
                            }
                            <div class="btn-group" role="group">
                                <button type="button" class="btn btn-outline-primary" id="btn-todas">
                                    Todas (@total)
                                </button>
                                <button type="button" class="btn btn-outline-primary" id="btn-no-leidas">
                                    No leídas (@(total - leidas))
                                </button>
                                <button type="button" class="btn btn-outline-primary" id="btn-leidas">
                                    Leídas (@leidas)
                                </button>
                            </div>
                        </div>
                        <div class="col-md-6 text-end">
                            <button type="button" class="btn btn-outline-success" id="btn-marcar-todas">
                                <i class="bi bi-check-all me-1"></i>Marcar todas como leídas
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Lista de notificaciones -->
    <div class="row">
        <div class="col-12">
            <div id="notificaciones-container">
                @if (ViewBag.Notificaciones != null && ((IEnumerable<dynamic>)ViewBag.Notificaciones).Any())
                {
                    foreach (var noti in ViewBag.Notificaciones)
                    {
                        string icon = "bi-info-circle text-info";
                        string colorClass = "bg-info-subtle";
                        if (noti.Tipo == "reclamo")
                        {
                            icon = "bi-clipboard-data text-primary";
                            colorClass = "bg-primary-subtle";
                        }
                        else if (noti.Tipo == "respuesta")
                        {
                            icon = "bi-chat-left-text text-success";
                            colorClass = "bg-success-subtle";
                        }
                        else if (noti.Tipo == "estado")
                        {
                            icon = "bi-arrow-repeat text-warning";
                            colorClass = "bg-warning-subtle";
                        }
                        <div class="card mb-3 border-0 shadow-sm notificacion-item @colorClass" data-leida="@(noti.Leida ? "true" : "false")">
                            <div class="card-body">
                                <div class="row align-items-start">
                                    <div class="col-auto">
                                        <div class="notification-icon">
                                            <i class="bi @icon fs-4"></i>
                                        </div>
                                    </div>
                                    <div class="col">
                                        <div class="d-flex justify-content-between align-items-start mb-2">
                                            <h6 class="mb-0 fw-bold">
                                                @noti.Titulo
                                            </h6>
                                            <small class="text-muted">
                                                @noti.FechaCreacion.ToString("dd/MM/yyyy HH:mm")
                                            </small>
                                        </div>
                                        <p class="mb-2">
                                            @noti.Mensaje
                                        </p>
                                        <div class="d-flex gap-2">
                                            <button type="button" class="btn btn-sm btn-outline-primary">
                                                <i class="bi bi-check me-1"></i>Marcar como visto
                                            </button>
                                            <button type="button" class="btn btn-sm btn-outline-danger">
                                                <i class="bi bi-trash me-1"></i>Eliminar
                                            </button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                }
                else
                {
                    <div class="text-center py-5">
                        <i class="bi bi-bell-slash text-muted" style="font-size: 4rem;"></i>
                        <h5 class="mt-3 text-muted">No hay notificaciones</h5>
                        <p class="text-muted">No tienes notificaciones para mostrar.</p>
                    </div>
                }
            </div>

            <!-- Mensaje cuando no hay notificaciones -->
            <div id="no-notificaciones" class="text-center py-5" style="display: none;">
                <div class="card border-0">
                    <div class="card-body py-5">
                        <i class="bi bi-bell-slash text-muted" style="font-size: 4rem;"></i>
                        <h5 class="mt-3 text-muted">No hay notificaciones</h5>
                        <p class="text-muted">No tienes notificaciones con los filtros seleccionados.</p>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<style>
    .notificacion-item {
        transition: all 0.3s ease;
        cursor: pointer;
    }

    .notificacion-item:hover {
        transform: translateY(-2px);
        box-shadow: 0 8px 25px rgba(0,0,0,0.1) !important;
    }

    .notificacion-item.no-leida {
        border-left: 4px solid #007bff;
        background: linear-gradient(135deg, #ffffff 0%, #f8f9fa 100%);
    }

    .notificacion-item.leida {
        border-left: 4px solid #e9ecef;
        background: #f8f9fa;
    }

    .notification-icon {
        width: 50px;
        height: 50px;
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        background: rgba(0,123,255,0.1);
    }

    .text-success .notification-icon {
        background: rgba(40,167,69,0.1);
    }

    .text-warning .notification-icon {
        background: rgba(255,193,7,0.1);
    }

    .text-info .notification-icon {
        background: rgba(23,162,184,0.1);
    }

    .text-primary .notification-icon {
        background: rgba(0,123,255,0.1);
    }

    /* For filter buttons: force solid blue background when active */
    .btn-group .btn.btn-outline-primary.active {
        background-color: #007bff !important;
        color: #fff !important;
        border-color: #007bff !important;
        box-shadow: none !important;
        font-weight: 600;
        transition: background 0.2s, color 0.2s;
    }

    .btn-group .btn.btn-outline-primary.active:focus,
    .btn-group .btn.btn-outline-primary.active:hover {
        background-color: #0056b3 !important;
        color: #fff !important;
        border-color: #0056b3 !important;
    }

    .fade-out {
        opacity: 0;
        transform: translateX(100px);
        transition: all 0.3s ease;
    }
</style>

<script>
    // Establecer el filtro 'Todas' como activo al cargar la página
    $('#btn-todas').addClass('active');

    // Marcar individual como visto (AJAX)
    $(document).on('click', '.btn-outline-primary:contains("Marcar como visto")', function(e) {
        e.stopPropagation();
        var card = $(this).closest('.notificacion-item');
        var id = $(this).data('id');
        $.ajax({
            url: '/Soporte/MarcarNotificacionVisto',
            type: 'POST',
            data: { id: id },
            success: function(response) {
                if (response.success) {
                    marcarComoLeida(card);
                    updateCounters();
                    showToast('Notificación marcada como vista', 'success');
                } else {
                    showToast(response.message || 'Error al marcar como vista', 'danger');
                }
            },
            error: function() {
                showToast('Error de conexión al marcar como vista', 'danger');
            }
        });
    });

    // Eliminar notificación (AJAX)
    $(document).on('click', '.btn-outline-danger:contains("Eliminar")', function(e) {
        e.stopPropagation();
        var card = $(this).closest('.notificacion-item');
        var id = $(this).data('id');
        if (confirm('¿Estás seguro de que quieres eliminar esta notificación?')) {
            $.ajax({
                url: '/Soporte/EliminarNotificacion',
                type: 'POST',
                data: { id: id },
                success: function(response) {
                    if (response.success) {
                        card.addClass('fade-out');
                        setTimeout(function() {
                            card.remove();
                            updateCounters();
                            checkEmptyState();
                        }, 300);
                        showToast('Notificación eliminada', 'info');
                    } else {
                        showToast(response.message || 'Error al eliminar notificación', 'danger');
                    }
                },
                error: function() {
                    showToast('Error de conexión al eliminar notificación', 'danger');
                }
            });
        }
    });
        // Filtros de notificaciones: solo uno activo a la vez
        $('.btn-group .btn').on('click', function() {
            $('.btn-group .btn').removeClass('active');
            $(this).addClass('active');

            if (this.id === 'btn-todas') {
                $('.notificacion-item').show();
            } else if (this.id === 'btn-no-leidas') {
                $('.notificacion-item').hide();
                var noLeidas = $('.notificacion-item[data-leida="false"]');
                if (noLeidas.length > 0) {
                    noLeidas.show();
                }
            } else if (this.id === 'btn-leidas') {
                $('.notificacion-item').hide();
                var leidas = $('.notificacion-item[data-leida="true"]');
                if (leidas.length > 0) {
                    leidas.show();
                }
            }
            checkEmptyState();
        });

        // Marcar todas como leídas
        $('#btn-marcar-todas').click(function() {
            alert('Funcionalidad en desarrollo');
        });

        // Marcar individual como leída (AJAX)
        $(document).on('click', '.btn-marcar-leida', function(e) {
            e.stopPropagation();
            var card = $(this).closest('.notificacion-item');
            var id = $(this).data('id');
            $.ajax({
                url: '/Usuario/MarcarNotificacionLeida',
                type: 'POST',
                data: { id: id },
                success: function(response) {
                    if (response.success) {
                        marcarComoLeida(card);
                        updateCounters();
                        showToast('Notificación marcada como leída', 'success');
                    } else {
                        showToast(response.message || 'Error al marcar como leída', 'danger');
                    }
                },
                error: function() {
                    showToast('Error de conexión al marcar como leída', 'danger');
                }
            });
        });

        // Eliminar notificación (AJAX)
        $(document).on('click', '.btn-eliminar', function(e) {
            e.stopPropagation();
            var card = $(this).closest('.notificacion-item');
            var id = $(this).data('id');
            if (confirm('¿Estás seguro de que quieres eliminar esta notificación?')) {
                $.ajax({
                    url: '/Usuario/EliminarNotificacion',
                    type: 'POST',
                    data: { id: id },
                    success: function(response) {
                        if (response.success) {
                            card.addClass('fade-out');
                            setTimeout(function() {
                                card.remove();
                                updateCounters();
                                checkEmptyState();
                            }, 300);
                            showToast('Notificación eliminada', 'info');
                        } else {
                            showToast(response.message || 'Error al eliminar notificación', 'danger');
                        }
                    },
                    error: function() {
                        showToast('Error de conexión al eliminar notificación', 'danger');
                    }
                });
            }
        });

        // Función para marcar como leída
        function marcarComoLeida(card) {
            card.attr('data-leida', 'true')
                .removeClass('no-leida')
                .addClass('leida')
                .find('.btn-marcar-leida').remove();

            card.find('.badge').fadeOut();
            card.find('h6, p').removeClass('text-dark').addClass('text-muted');
        }

        // Función para actualizar contadores
        function updateCounters() {
            var total = $('.notificacion-item').length;
            var leidas = $('.notificacion-item[data-leida="true"]').length;
            var noLeidas = total - leidas;

            $('#btn-todas').html(`Todas (${total})`);
            $('#btn-no-leidas').html(`No leídas (${noLeidas})`);
            $('#btn-leidas').html(`Leídas (${leidas})`);
        }

        // Función para verificar estado vacío
        function checkEmptyState() {
            var visible = $('.notificacion-item:visible').length;
            if (visible === 0) {
                $('#no-notificaciones').show();
            } else {
                $('#no-notificaciones').hide();
            }
        }

        // Función para mostrar toast
        function showToast(message, type) {
            var toast = $(`
                <div class="toast align-items-center text-white bg-${type} border-0" role="alert" style="position: fixed; top: 20px; right: 20px; z-index: 9999;">
                    <div class="d-flex">
                        <div class="toast-body">
                            ${message}
                        </div>
                        <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast"></button>
                    </div>
                </div>
            `);

            $('body').append(toast);
            var bsToast = new bootstrap.Toast(toast[0]);
            bsToast.show();

            toast.on('hidden.bs.toast', function() {
                $(this).remove();
            });
        }

        // Click en notificación para expandir/colapsar
        $(document).on('click', '.notificacion-item', function(e) {
            if (!$(e.target).closest('button').length) {
                $(this).find('.btn-group').toggle();
            }
        });

        // Volver al dashboard
        $(document).on('click', 'a[asp-action="Dashboard"]', function(e) {
            e.preventDefault();
            window.location.href = $(this).attr('href') || '/Usuario/Dashboard';
        });
</script>
